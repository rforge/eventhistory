* Survival
** Let lava generate some data
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no
library(lava)
m <- lvm(~X1+X2+X3+eventtime+censtime+Noise)
distribution(m,"X2") <- binomial.lvm()
distribution(m,"X3") <- binomial.lvm()
distribution(m,"eventtime") <- coxWeibull.lvm(scale=1/100)
distribution(m,"censtime") <- coxWeibull.lvm(scale=1/100)
regression(m,to="eventtime",from=c("X1","X2","X3")) <- c(0.6,-0.7,0.7)
m <- eventTime(m,time~min(eventtime=1,censtime=0),"event")
set.seed(17)
d <- sim(m,200)
d$X2 <- factor(d$X2,levels=c(0,1),labels=c("low survival","high survival"))
d$X3 <- factor(d$X3,levels=c(0,1),labels=c("high survival","low survival"))
#+END_SRC

#+RESULTS:

** Test combinations of discrete and continuous covariates   
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(prodlim)
f0 <- prodlim(Hist(time,event)~1,data=d)
f1 <- prodlim(Hist(time,event)~X1,data=d)
f2 <- prodlim(Hist(time,event)~X2,data=d)
f23 <- prodlim(Hist(time,event)~X2+X3,data=d)
f123 <- prodlim(Hist(time,event)~X1+X2+X3,data=d)
f0 <- prodlim(Surv(time,event)~1,data=d)
f1 <- prodlim(Surv(time,event)~X1,data=d)
f2 <- prodlim(Surv(time,event)~X2,data=d)
f23 <- prodlim(Surv(time,event)~X2+X3,data=d)
f123 <- prodlim(Surv(time,event)~X1+X2+X3,data=d)
u <- Hist(time,event)~X1+X2+X3
f123 <- prodlim(u,data=d)
#+END_SRC

#+BEGIN_SRC R :results graphics  :file "~/research/SoftWare/eventhistory/pkg/prodlim/test/prodlim-plot2.pdf" :exports results :session *R* :cache yes 
plot(prodlim(Hist(time,event)~X2,data=d))
#+END_SRC

#+RESULTS[<2013-04-28 09:17:30> e998dd25b653b4bcf54d31ca63503fd842b848bd]:
[[file:~/research/SoftWare/eventhistory/pkg/prodlim/test/prodlim-plot2.pdf]]

#+BEGIN_SRC R :results graphics  :file "~/research/SoftWare/eventhistory/pkg/prodlim/test/prodlim-plot3.pdf" :exports results :session *R* :cache yes 
plot(prodlim(Hist(time,event)~X3,data=d))
#+END_SRC

#+RESULTS[<2013-04-28 09:19:05> e0145e89b5c1ffc413ba6dd802e03894a641c3c2]:
[[file:~/research/SoftWare/eventhistory/pkg/prodlim/test/prodlim-plot3.pdf]]

** Bootstrap

#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(survival)
library(prodlim)
data(pbc, package="survival")
pbc <- pbc[order(pbc$time,-pbc$status),]
set.seed(17)
boot <- sample(1:NROW(pbc),size=NROW(pbc),replace=TRUE)
boot.weights <- table(factor(boot,levels=1:NROW(pbc)))
s1 <- prodlim(Hist(time,status>0)~1,data=pbc,caseweights=boot.weights)
plot(s1,col=1,confint=FALSE)
s2 <- prodlim(Hist(time,status>0)~1,data=pbc[sort(boot),])
plot(s2,add=TRUE,col=2,confint=FALSE)
#+END_SRC   
   
** Case-weights 

#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(survey)
library(survival)
library(prodlim)
data(pbc, package="survival")
pbc <- pbc[order(pbc$time,-pbc$status),]
## pbc$randprob<-fitted(biasmodel)
## pbc$randprob <- as.numeric(pbc$sex=="m")+0.1
set.seed(17)
pbc$randprob <- abs(rnorm(NROW(pbc)))
dpbc <- svydesign(id=~id, weights=~randprob, strata=NULL, data=pbc)
s1<-svykm(Surv(time,status>0)~1, design=dpbc)
plot(s1,lwd=8)
s2 <- prodlim(Hist(time,status>0)~1,data=pbc,caseweights=pbc$randprob)
plot(s2,add=TRUE,col=2,confint=FALSE)
#+END_SRC   

** delayed entry 
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(SmoothHazard)
library(survival)
library(prodlim)
## simulate data from an illness-death model
mod <- idmModel(K=10,schedule=0,punctuality=1,cens="interval")
regression(mod,from="X",to="lifetime") <- log(2)
regression(mod,from="X",to="waittime") <- log(2)
regression(mod,from="X",to="illtime") <- log(2)
set.seed(137)
## we round the event times to have some ties
testdata <- round(sim(mod,250),1)
## the data enter with delay into the intermediate state (ill)
## thus, to estimate the cumulative incidence of
## the absorbing state (death) after illness we 
## have left-truncated data
illdata <- testdata[testdata$ill==1,]
illdata <- illdata[order(illdata$lifetime,-illdata$status),]
## sindex(jump.times=illdata$illtime,eval.times=illdata$lifetime)
## F <- prodlim(Hist(lifetime,status,entry=illtime)~1,data=illdata[1:5,])
## f <- survfit(Surv(illtime,lifetime,status)~1,data=illdata[1:5,],type="kaplan-meier")
f <- survfit(Surv(illtime,lifetime,status)~1,data=illdata,type="kaplan-meier")
F <- prodlim(Hist(lifetime,status,entry=illtime)~1,data=illdata)
plot(f,lwd=5)
plot(F,lwd=2,col=2,add=TRUE)
#+END_SRC
* Competing risks

#+BEGIN_SRC R :results graphics  :file "~/research/SoftWare/eventhistory/pkg/prodlim/test/aj.pdf" :exports results :session *R* :cache yes 
library(riskRegression)
data(Melanoma)
aj <- prodlim(Hist(time,status)~thick,data=Melanoma)
plot(aj)
#+END_SRC

#+RESULTS[<2013-04-28 09:14:42> 8d0af189a155e48de3bf70a0111c8f4e360f1b98]:
[[file:~/research/SoftWare/eventhistory/pkg/prodlim/test/aj.pdf]]

** delayed entry 

*** Without covariates
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(etm)
data(abortion)
cif.ab.etm <- etmCIF(Surv(entry, exit, cause != 0) ~ 1,abortion,etype = cause,failcode = 3)
cif.ab.prodlim <- prodlim(Hist(time=exit, event=cause,entry=entry) ~ 1,data=abortion)
cif.ab.etm
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1, curvlab = c("Control", "Exposed"))
plot(cif.ab.prodlim,add=TRUE,cause=3,confint=FALSE,col=3)
plot(cif.ab.prodlim,add=TRUE,cause=2,confint=FALSE,col=1)
plot(cif.ab.prodlim,add=TRUE,cause=1,confint=FALSE,col=2)
#+END_SRC   

*** With covariates
   
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(etm)
data(abortion)
cif.ab.etm <- etmCIF(Surv(entry, exit, cause != 0) ~ 1,abortion,etype = cause,failcode = 3)
names(cif.ab.etm[[1]])
head(cbind(cif.ab.etm[[1]]$time,cif.ab.etm[[1]]$n.risk))

cif.ab.prodlim <- prodlim(Hist(time=exit, event=cause,entry=entry) ~ group,data=abortion)
cif.ab.etm
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1, curvlab = c("Control", "Exposed"))
plot(cif.ab.prodlim,add=TRUE,cause=3)
plot(cif.ab.prodlim,add=TRUE,cause=2)
plot(cif.ab.prodlim,add=TRUE,cause=1)
#+END_SRC

#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(survival)
library(prodlim)
library(etm)
data(pbc,package="survival")
pbc$entry <- round(pbc$time/5)
cif.pbc.etm <- etmCIF(Surv(entry, time, status != 0) ~ 1,data=pbc,etype = status,failcode = 2)
ttt <- sort(unique(c(pbc$time,pbc$entry)))
out <- cbind(cbind(ttt,sapply(ttt,function(u){sum(pbc$entry<=u)}))[1:20,],cbind(cif.pbc.etm[[1]]$time,cif.pbc.etm[[1]]$n.risk)[1:20,])


out <- cbind(cif.pbc.etm[[1]]$time,cif.pbc.etm[[1]]$n.risk,cif.pbc.prodlim$time,cif.pbc.prodlim$n.risk)

plot(cif.pbc.etm, ci.type = "bars", pos.ci = 24, lwd=5)
plot(cif.pbc.prodlim,add=TRUE,cause=2,col=2,confint=FALSE)
#+END_SRC


#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(survival)
library(prodlim)
library(etm)
testdata <- data.frame(entry=c(1,5,2,8,5),exit=c(10,6,4,12,33),event=c(0,1,0,1,0))
cif.test.etm <- etmCIF(Surv(entry, exit, event) ~ 1,data=testdata,etype = event,failcode = 1)
cif.test.survival <- survfit(Surv(entry, exit, event) ~ 1,data=testdata)
cif.test.prodlim <- prodlim(Hist(exit,event,entry=entry)~1,data=testdata)

cbind(cif.pbc.etm[[1]]$time,cif.pbc.etm[[1]]$n.risk,cif.pbc.prodlim$time,cif.pbc.prodlim$n.risk)

plot(cif.test.etm, ci.type = "bars", pos.ci = 24, lwd=5)
plot(cif.test.etm, ci.type = "bars", pos.ci = 24, lwd=5)
plot(cif.test.prodlim,add=TRUE,cause=2,col=2,confint=FALSE,type="cuminc")
#+END_SRC
