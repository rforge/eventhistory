* Let lava generate some data
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no
library(lava)
m <- lvm(~X1+X2+X3+X4+eventtime+censtime+Noise)
distribution(m,"X2") <- binomial.lvm()
distribution(m,"X3") <- binomial.lvm()
distribution(m,"eventtime") <- coxWeibull.lvm(scale=1/100)
distribution(m,"censtime") <- coxWeibull.lvm(scale=1/100)
regression(m,to="eventtime",from=c("X1","X2","X3")) <- c(0.6,-0.7,0.7)
m <- eventTime(m,time~min(eventtime=1,censtime=0),"event")
set.seed(17)
d <- sim(m,200)
#set.seed(17)
#d <- sim(m,5)
d$X2 <- factor(d$X2,levels=c(0,1),labels=c("low survival","high survival"))
d$X3 <- factor(d$X3,levels=c(0,1),labels=c("high survival","low survival"))
#+END_SRC

#+RESULTS:

* Survival
** Test combinations of discrete and continuous covariates   
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no 
library(prodlim)
f0 <- prodlim(Hist(time,event)~1,data=d)
summary(f0)
f1 <- prodlim(Hist(time,event)~X1,data=d)
summary(f1)
f2 <- prodlim(Hist(time,event)~X2,data=d)
summary(f2)
f23 <- prodlim(Hist(time,event)~X2+X3,data=d)
summary(f23)
f123 <- prodlim(Hist(time,event)~X1+X2+X3,data=d)
summary(f123)
summary(f123,newdata=data.frame(X1="high survival",X2="low survival",X3=d$X3[17]))
f0 <- prodlim(Surv(time,event)~1,data=d)
f1 <- prodlim(Surv(time,event)~X1,data=d)
f2 <- prodlim(Surv(time,event)~X2,data=d)
f23 <- prodlim(Surv(time,event)~X2+X3,data=d)
f123 <- prodlim(Surv(time,event)~X1+X2+X3,data=d)
u <- Hist(time,event)~X1+X2+X3
f123 <- prodlim(u,data=d)
#+END_SRC

#+BEGIN_SRC R :results output raw :exports both :session *R* :cache no 
plot(prodlim(Hist(time,event)~X2,data=d))
#+END_SRC


#+BEGIN_SRC R :results output raw :exports results :session *R* :cache no 
plot(prodlim(Hist(time,event)~X3,data=d))
#+END_SRC

** Compare with survfit (survival)

#+BEGIN_SRC R :exports both :results output raw  :session *R* :cache yes 
library(survival)
f0 <- prodlim(Hist(time,event)~1,data=d)
f0.s <- survfit(Surv(time,event)~1,data=d)
ttt <- sort(unique(d$time))
sum0.s <- summary(f0.s,times=ttt[1:5])
plot(f0.s,lwd=6)
plot(f0,add=TRUE,col=2)

summary(f0.s,times=c(0,0.1,0.2,0.3))


result.survfit <- data.frame(time=sum0.s$time,n.risk=sum0.s$n.risk,n.event=sum0.s$n.event,surv=sum0.s$surv,std.err=sum0.s$std.err,lower=sum0.s$lower,upper=sum0.s$upper)
result.prodlim <- data.frame(summary(f0,times=ttt)$table[,c("time","n.risk","n.event","n.lost","surv","se.surv","lower","upper")])
cbind(result.survfit[,c("time","n.risk","n.event","surv")],result.prodlim[,c("time","n.risk","n.event","surv")])
a <- round(result.survfit$surv,8)
b <- round(result.prodlim$surv[!is.na(result.prodlim$se.surv)],8)
if (all(a==b)){cat("\nOK\n")}else{cat("\nERROR\n")}
if (all(round(result.survfit$std.err,8)==round(result.prodlim$se.surv[!is.na(result.prodlim$se.surv)],8))){cat("\nOK\n")}else{cat("\nERROR\n")}
#+END_SRC   

#+RESULTS[<2013-12-04 13:12:16> 4bcb1cfe34752cab52afc58fc33e8919c4078e3c]:

OK

** Bootstrap

#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no 
library(survival)
library(prodlim)
data(pbc, package="survival")
pbc <- pbc[order(pbc$time,-pbc$status),]
set.seed(17)
boot <- sample(1:NROW(pbc),size=NROW(pbc),replace=TRUE)
boot.weights <- table(factor(boot,levels=1:NROW(pbc)))
s1 <- prodlim(Hist(time,status>0)~1,data=pbc,caseweights=boot.weights)
plot(s1,col=1,confint=FALSE)
s2 <- prodlim(Hist(time,status>0)~1,data=pbc[sort(boot),])
plot(s2,add=TRUE,col=2,confint=FALSE)
#+END_SRC   
   
** Case-weights 

#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no 
library(survey)
library(survival)
library(prodlim)
data(pbc, package="survival")
pbc <- pbc[order(pbc$time,-pbc$status),]
## pbc$randprob<-fitted(biasmodel)
## pbc$randprob <- as.numeric(pbc$sex=="m")+0.1
set.seed(17)
pbc$randprob <- abs(rnorm(NROW(pbc)))
dpbc <- svydesign(id=~id, weights=~randprob, strata=NULL, data=pbc)
s1<-svykm(Surv(time,status>0)~1, design=dpbc)
plot(s1,lwd=8)
s2 <- prodlim(Hist(time,status>0)~1,data=pbc,caseweights=pbc$randprob)
plot(s2,add=TRUE,col=2,confint=FALSE)
#+END_SRC   

** delayed entry 
*** Without covariates
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(survival)
library(prodlim)
data(pbc,package="survival")
pbc$entry <- round(pbc$time/5)
f <- survfit(Surv(entry,time,status!=0)~1,data=pbc)
F <- prodlim(Hist(time,status!=0,entry=entry)~1,data=pbc)
F2 <- prodlim(Surv(entry,time,status!=0)~1,data=pbc)
plot(f,lwd=8)
plot(F,lwd=4,col=2,add=TRUE)
plot(F2,lwd=1,col=4,add=TRUE,confint=FALSE)

F0 <- prodlim(Hist(time,status!=0,entry=entry)~1,data=pbc0)
f0 <- survfit(Surv(entry,time,status!=0)~1,data=pbc0)
plot(f0,lwd=5,xlim=c(0,1000))
plot(F0,lwd=2,col=2,add=TRUE)
plot(F0)
#+END_SRC

*** With covariates


#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(survival)
library(prodlim)
data(pbc,package="survival")
pbc0 <- pbc[1:10,]
data(pbc0,package="survival")
pbc0$entry <- round(pbc0$time/5)
f <- survfit(Surv(entry,time,status!=0)~edema,data=pbc0)
f.0.5 <- survfit(Surv(entry,time,status!=0)~1,data=pbc0[pbc0$edema==0.5,])
F <- prodlim(Hist(time,status!=0,entry=entry)~edema,data=pbc0)
F.0.5 <- prodlim(Hist(time,status!=0,entry=entry)~1,data=pbc0[pbc0$edema==0.5,])
summary(F)
#+END_SRC    

#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache yes 
library(survival)
library(prodlim)
data(pbc,package="survival")
pbc$entry <- round(pbc$time/5)
f <- survfit(Surv(entry,time,status!=0)~edema,data=pbc)
f.0.5 <- survfit(Surv(entry,time,status!=0)~1,data=pbc[pbc$edema==0.5,])
F <- prodlim(Hist(time,status!=0,entry=entry)~edema,data=pbc)
F.0.5 <- prodlim(Hist(time,status!=0,entry=entry)~1,data=pbc[pbc$edema==0.5,])
summary(F)

summary(F,newdata=data.frame(edema=c(0.5)))

plot(f,lwd=5,col=1:3)
lines(f.0.5,col=4)
plot(F.0.5,add=TRUE,lwd=2,col=4)
plot(F,lwd=2,col=1:3,lty=3,add=TRUE,confint=FALSE)
#+END_SRC

*** Illness-death model

#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no 
library(SmoothHazard)
library(survival)
library(prodlim)
## simulate data from an illness-death model
mod <- idmModel(K=10,schedule=0,punctuality=1,cens="interval")
regression(mod,from="X",to="lifetime") <- log(2)
regression(mod,from="X",to="waittime") <- log(2)
regression(mod,from="X",to="illtime") <- log(2)
set.seed(137)
## we round the event times to have some ties
testdata <- round(sim(mod,250),1)
## the data enter with delay into the intermediate state (ill)
## thus, to estimate the cumulative incidence of
## the absorbing state (death) after illness we 
## have left-truncated data
illdata <- testdata[testdata$ill==1,]
illdata <- illdata[order(illdata$lifetime,-illdata$status),]
## sindex(jump.times=illdata$illtime,eval.times=illdata$lifetime)
## F <- prodlim(Hist(lifetime,status,entry=illtime)~1,data=illdata[1:5,])
## f <- survfit(Surv(illtime,lifetime,status)~1,data=illdata[1:5,],type="kaplan-meier")
f <- survfit(Surv(illtime,lifetime,status)~1,data=illdata)
F <- prodlim(Hist(lifetime,status,entry=illtime)~1,data=illdata)
plot(f,lwd=5)
plot(F,lwd=2,col=2,add=TRUE)
#+END_SRC
* Competing risks
#+BEGIN_SRC R :results graphics  :file "~/research/SoftWare/eventhistory/pkg/prodlim/test/aj.pdf" :exports results :session *R* :cache no 
library(riskRegression)
data(Melanoma)
aj <- prodlim(Hist(time,status)~thick,data=Melanoma)
plot(aj)
#+END_SRC

#+RESULTS[<2013-04-28 09:14:42> 8d0af189a155e48de3bf70a0111c8f4e360f1b98]:
[[file:~/research/SoftWare/eventhistory/pkg/prodlim/test/aj.pdf]]

** delayed entry 
*** Without covariates
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no 
library(etm)
data(abortion)
cif.ab.etm <- etmCIF(Surv(entry, exit, cause != 0) ~ 1,abortion,etype = cause,failcode = 3)
cif.ab.prodlim <- prodlim(Hist(time=exit, event=cause,entry=entry) ~ 1,data=abortion)
test <- etm:::ci.transfo(cif.ab.etm[[1]],tr.choice=c("0 3"),level=0.95,transfo="cloglog")[[1]][,c("time","n.risk","n.event","P","var","lower","upper")]
test <- cbind(test,summary(cif.ab.prodlim,cause=3,times=test$time)$table[[1]][,c("time","n.risk","n.event","cuminc","se.cuminc","lower","upper")])
tail(test)
#+END_SRC   

#+BEGIN_SRC R :results graphics  :file "~/research/SoftWare/prodlim/test/delayedEntryCompRisk-testgraph.pdf" :exports results :session *R* :cache no 
library(prodlim)
library(etm)
data(abortion)
abortion0 <- abortion[c(1,2,1178,1183,54,888,889,1000),]
#abortion0 <- abortion0[1:3,]
x <- prodlim(Hist(time=exit, event=cause,entry=entry) ~ 1,data=abortion0)
x0 <- etmCIF(Surv(entry, exit, cause != 0) ~ 1,abortion0,etype = cause)


par(mfrow=c(2,2))
cif.ab.etm <- etmCIF(Surv(entry, exit, cause != 0) ~ 1,abortion,etype = cause,failcode = 3)
cif.ab.prodlim <- prodlim(Hist(time=exit, event=cause,entry=entry) ~ 1,data=abortion)
# cause 3
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1,which.cif=3,lwd=8)
plot(cif.ab.prodlim,add=TRUE,cause=3,confint=TRUE,col=2)
# cause 2
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1,which.cif=2,lwd=8)
plot(cif.ab.prodlim,add=TRUE,cause=2,confint=TRUE,col=2)
# cause 1
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1,which.cif=1,lwd=8)
plot(cif.ab.prodlim,add=TRUE,cause=1,confint=TRUE,col=2)
#+END_SRC

#+RESULTS[<2013-12-04 08:51:41> 72f89ca9f0ef9945801985667c3399c6cde21502]:
[[file:~/research/SoftWare/prodlim/test/delayedEntryCompRisk-testgraph.pdf]]

    
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no 
library(etm)
data(abortion)
head(abortion)
# abortion <- abortion[order(abortion$exit),]
cif.ab.etm <- etmCIF(Surv(entry, exit, cause != 0) ~ 1,abortion,etype = cause,failcode = 3)
cif.ab.prodlim <- prodlim(Hist(time=exit, event=cause, entry=entry) ~ 1,data=abortion)
plot(cif.ab.etm,lwd=6)
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1, curvlab = c("Control", "Exposed"),lwd=8)
plot(cif.ab.prodlim,add=TRUE,col=2,cause=3)


u3 <- etm:::ci.transfo(cif.ab.etm[[1]],tr.choice=c("0 3"),level=0.95,transfo="cloglog")[[1]][,c("time","n.risk","n.event","P","var","lower","upper")]
U3 <- cbind(u3,summary(cif.ab.prodlim,cause=3,times=u3$time)$table[[1]][,c("time","n.risk","n.event","cuminc","se.cuminc","lower","upper")])

head(cbind(cif.ab.etm$""$time,cif.ab.etm$""$n.risk,cif.ab.etm$""$n.risk))
head(cbind(cif.ab.prodlim$time,cif.ab.prodlim$n.risk,cause1=cif.ab.prodlim$cuminc[[1]],cause2=cif.ab.prodlim$cuminc[[2]],cause3=cif.ab.prodlim$cuminc[[3]]))


names(cif.ab.etm[[1]])
head(cbind(cif.ab.etm[[1]]$time,cif.ab.etm[[1]]$n.risk))
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1, curvlab = c("Control", "Exposed"))
plot(cif.ab.prodlim,add=TRUE,cause=3,confint=FALSE)
plot(cif.ab.prodlim,add=FALSE,cause=3,confint=FALSE)
plot(cif.ab.prodlim,add=TRUE,cause=2,confint=FALSE)
plot(cif.ab.prodlim,add=TRUE,cause=1,confint=FALSE)
#+END_SRC
    
*** With covariates
    
#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no 
library(etm)
data(abortion)
cif.ab.etm <- etmCIF(Surv(entry, exit, cause != 0) ~ group,abortion,etype = cause,failcode = 3)
names(cif.ab.etm[[1]])
head(cbind(cif.ab.etm[[1]]$time,cif.ab.etm[[1]]$n.risk))
cif.ab.prodlim <- prodlim(Hist(time=exit, event=cause,entry=entry) ~ group,data=abortion)
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1, curvlab = c("Control", "Exposed"))
plot(cif.ab.prodlim,add=TRUE,cause=3,confint=FALSE)
plot(cif.ab.prodlim,add=FALSE,cause=3,confint=FALSE)
plot(cif.ab.prodlim,add=TRUE,cause=2,confint=FALSE)
plot(cif.ab.prodlim,add=TRUE,cause=1,confint=FALSE)
#+END_SRC

#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no 
library(survival)
library(prodlim)
library(etm)
data(pbc,package="survival")
pbc$entry <- round(pbc$time/5)
cif.pbc.etm <- etmCIF(Surv(entry, time, status != 0) ~ 1,data=pbc,etype = status,failcode = 2)
cif.pbc.prodlim <- prodlim(Hist(time, status, entry) ~ 1,data=pbc)
ttt <- sort(unique(c(pbc$time,pbc$entry)))
out <- cbind(cbind(ttt,sapply(ttt,function(u){sum(pbc$entry<=u)}))[1:20,],cbind(cif.pbc.etm[[1]]$time,cif.pbc.etm[[1]]$n.risk)[1:20,])
out <- cbind(cif.pbc.etm[[1]]$time,cif.pbc.etm[[1]]$n.risk,cif.pbc.prodlim$time,cif.pbc.prodlim$n.risk)
plot(cif.pbc.etm, ci.type = "bars", pos.ci = c(1300), lwd=5)
plot(cif.pbc.prodlim,add=TRUE,cause=2,col=2,confint=TRUE)
#+END_SRC


#+BEGIN_SRC R  :results output raw  :exports results  :session *R* :cache no 
library(survival)
library(prodlim)
library(etm)
testdata <- data.frame(entry=c(1,5,2,8,5),exit=c(10,6,4,12,33),event=c(0,1,0,1,0))
cif.test.etm <- etmCIF(Surv(entry, exit, event) ~ 1,data=testdata,etype = event,failcode = 1)
cif.test.survival <- survfit(Surv(entry, exit, event) ~ 1,data=testdata)
cif.test.prodlim <- prodlim(Hist(exit,event,entry=entry)~1,data=testdata)
plot(cif.test.etm, ci.type = "bars", pos.ci = 24, lwd=5)
plot(cif.test.etm, ci.type = "bars", pos.ci = 24, lwd=5)
plot(cif.test.prodlim,add=TRUE,cause=2,col=2,confint=TRUE,type="cuminc")
#+END_SRC
