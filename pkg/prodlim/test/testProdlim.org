* Lava some data
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache no
setwd("~/research/SoftWare/prodlim/test/")
library(lava)
library(prodlim)
## library(survival)
m <- crModel()
addvar(m) <- ~X1+X2+X3+X4+X5+X6
distribution(m,"X3") <- binomial.lvm()
distribution(m,"X4") <- normal.lvm(mean=50,sd=10)
distribution(m,"eventtime1") <- coxWeibull.lvm(scale=1/200)
distribution(m,"censtime") <- coxWeibull.lvm(scale=1/1000)
m <- categorical(m,K=4,eventtime1~X5,beta=c(1,0,0,0),p=c(0.1,0.2,0.3))
m <- categorical(m,K=3,eventtime1~X1,beta=c(2,1,0),p=c(0.3,0.2))
regression(m,to="eventtime1",from=c("X2","X4")) <- c(0.3,0)
regression(m,to="eventtime2",from=c("X2","X4")) <- c(0.6,-0.07)
set.seed(17)
d <- sim(m,200)
d$X1 <- factor(d$X1,levels=c(0,1,2),labels=c("low survival","medium survival","high survival"))
## d$X3 <- factor(d$X3,levels=c(0,1),labels=c("high survival","low survival"))
d$X5 <- factor(d$X5,levels=c("0","1","2","3"),labels=c("one","two","three","four"))
d$Event <- factor(d$event,levels=c("0","1","2"),labels=c("0","cause-1","cause-2"))
d$status <- 1*(d$event!=0)
head(d)
#+END_SRC

* Survival
** No covariates
*** fit + print
#+BEGIN_SRC R :exports both :results output   :session *R* 
s0 <- prodlim(Hist(time,status)~1,data=d)
print(s0)
#+END_SRC   

*** summary

#+BEGIN_SRC R :exports both :results output  :session *R*  
summary(s0,intervals=TRUE)
#+END_SRC   

*** predict
#+BEGIN_SRC R :exports both :results output   :session *R*  
predict(s0,times=1:10)
#+END_SRC   

*** plot
#+BEGIN_SRC R :results graphics :file "s0.png" :exports both :session *R* :cache no 
plot(s0)
#+END_SRC   

** Subset
#+BEGIN_SRC R :exports both :results output   :session *R* 
su <- prodlim(Hist(time,status)~1,data=d,subset=d$X1=="medium survival")
print(su)
#+END_SRC   

** A single binary covariate
*** fit + print
#+BEGIN_SRC R :exports both :results output   :session *R* 
s1 <- prodlim(Hist(time,status)~X1,data=d)
print(s1)
#+END_SRC   

*** summary

#+BEGIN_SRC R :exports both :results output  :session *R*  
summary(s1,intervals=TRUE,newdata=data.frame(X1=c("medium survival","high survival","low survival")))
#+END_SRC   

*** predict
#+BEGIN_SRC R :exports both :results output   :session *R*  
predict(s1,times=0:10,newdata=data.frame(X1=c("medium survival","low survival","high survival")))
#+END_SRC   

*** plot
#+BEGIN_SRC R :results graphics :file "s1.png" :exports both :session *R* :cache no 
plot(s1)
#+END_SRC   

** A single continuous covariate
*** fit + print
#+BEGIN_SRC R :exports both :results output   :session *R* 
s2 <- prodlim(Hist(time,status)~X2,data=d)
print(s2)
#+END_SRC   



*** summary

#+BEGIN_SRC R :exports both :results output  :session *R*  
summary(s2,intervals=TRUE)
#+END_SRC   

*** predict
#+BEGIN_SRC R :exports both :results output   :session *R*  
predict(s2,times=0:10,newdata=data.frame(X2=quantile(d$X2)))
#+END_SRC   

*** plot

#+BEGIN_SRC R :results graphics :file "s2.png" :exports both :session *R* :cache no 
plot(s2)
#+END_SRC   


** Combination of two categorical covariates
*** fit + print
#+BEGIN_SRC R :exports both :results output   :session *R* 
s1a <- prodlim(Hist(time,status)~X1+X3,data=d)
print(s1a)
#+END_SRC   

*** summary

#+BEGIN_SRC R :exports both :results output  :session *R*  
summary(s1a,intervals=TRUE)
#+END_SRC   

*** predict
#+BEGIN_SRC R :exports both :results output   :session *R*  
predict(s1a,times=0:10,newdata=expand.grid(X1=levels(d$X1),X3=unique(d$X3)))
#+END_SRC   

*** plot
#+BEGIN_SRC R :results graphics :file "s1a.png" :exports both :session *R* :cache no
## par(mar=c(3,3,3,3))
plot(s1a,confint=FALSE,atrisk=FALSE,legend.x="bottomleft",legend.cex=0.8)
#+END_SRC   

** Combination of one categorical and one continuous covariate
*** fit + print
#+BEGIN_SRC R :exports both :results output   :session *R* 
s3 <- prodlim(Hist(time,status)~X1+X2,data=d)
print(s3)
#+END_SRC   

*** summary

#+BEGIN_SRC R :exports both :results output  :session *R*  
summary(s3,intervals=TRUE)
#+END_SRC   

*** predict
#+BEGIN_SRC R :exports both :results output   :session *R*  
predict(s3,times=0:10,newdata=expand.grid(X1=levels(d$X1),X2=c(quantile(d$X2,0.05),median(d$X2))))
#+END_SRC   

*** plot
#+BEGIN_SRC R :results graphics :file "s3.png" :exports both :session *R* :cache no 
plot(s3,confint=FALSE,atrisk=FALSE,legend.x="bottomleft",legend.cex=0.8,newdata=expand.grid(X1=levels(d$X1),X2=c(quantile(d$X2,0.05),median(d$X2))))
#+END_SRC   

* Competing risks
** No covariates
*** fit + print
#+BEGIN_SRC R :exports both :results output   :session *R* 
f0 <- prodlim(Hist(time,event)~1,data=d)
print(f0)
#+END_SRC   

*** summary

#+BEGIN_SRC R :exports both :results output  :session *R*  
summary(f0,intervals=TRUE)
#+END_SRC   

*** predict
#+BEGIN_SRC R :exports both :results output   :session *R*  
predict(f0,times=1:10)
#+END_SRC   

*** plot
#+BEGIN_SRC R :results graphics :file "f0.png" :exports both :session *R* :cache no 
plot(f0)
#+END_SRC   

** A single binary covariate
*** fit + print
#+BEGIN_SRC R :exports both :results output   :session *R* 
f1 <- prodlim(Hist(time,event)~X1,data=d)
print(f1)
#+END_SRC   

*** summary

#+BEGIN_SRC R :exports both :results output  :session *R*  
summary(f1,intervals=TRUE,newdata=data.frame(X1=c("medium survival","high survival","low survival")))
#+END_SRC   

*** predict
#+BEGIN_SRC R :exports both :results output   :session *R*  
predict(f1,times=0:10,newdata=data.frame(X1=c("medium survival","low survival","high survival")))
#+END_SRC   

*** plot
#+BEGIN_SRC R :results graphics :file "f1.png" :exports both :session *R* :cache no 
plot(f1)
#+END_SRC   

** A single continuous covariate
*** fit + print
#+BEGIN_SRC R :exports both :results output   :session *R* 
f2 <- prodlim(Hist(time,event)~X2,data=d)
print(f2)
#+END_SRC   

*** summary

#+BEGIN_SRC R :exports both :results output  :session *R*  
summary(f2,intervals=TRUE)
#+END_SRC   

*** predict
#+BEGIN_SRC R :exports both :results output   :session *R*  
predict(f2,times=0:10,newdata=data.frame(X2=quantile(d$X2)))
#+END_SRC   

*** plot
#+BEGIN_SRC R :results graphics :file "f2.png" :exports both :session *R* :cache no 
plot(f2)
## plot(0,0)
#+END_SRC   

** Combination of two categorical covariates
*** fit + print
#+BEGIN_SRC R :exports both :results output   :session *R* 
f1a <- prodlim(Hist(time,event)~X1+X3,data=d)
print(f1a)
#+END_SRC   

*** summary

#+BEGIN_SRC R :exports both :results output  :session *R*  
summary(f1a,intervals=TRUE)
#+END_SRC   

*** predict
#+BEGIN_SRC R :exports both :results output   :session *R*  
predict(f1a,times=0:10,newdata=expand.grid(X1=levels(d$X1),X3=unique(d$X3)))
#+END_SRC   

*** plot
#+BEGIN_SRC R :results graphics :file "f1a.png" :exports both :session *R* :cache no 
plot(f1a,confint=FALSE,atrisk=FALSE,legend.x="bottomleft",legend.cex=0.8)
#+END_SRC   

** Combination of one categorical and one continuous covariate
*** fit + print
#+BEGIN_SRC R :exports both :results output   :session *R* 
f3 <- prodlim(Hist(time,event)~X1+X2,data=d)
print(f3)
#+END_SRC   

*** summary

#+BEGIN_SRC R :exports both :results output  :session *R*  
summary(f3,intervals=TRUE)
#+END_SRC   

*** predict
#+BEGIN_SRC R :exports both :results output   :session *R*  
predict(f3,times=0:10,newdata=expand.grid(X1=levels(d$X1),X2=c(quantile(d$X2,0.05),median(d$X2))))
#+END_SRC   

*** plot
#+BEGIN_SRC R :results graphics :file "f3.png" :exports both :session *R* :cache no 
plot(f3,confint=FALSE,atrisk=FALSE,legend.x="bottomleft",legend.cex=0.8,newdata=expand.grid(X1=levels(d$X1),X2=c(quantile(d$X2,0.05),median(d$X2))))
#+END_SRC   

* Special cases
** Compare with survfit (survival)

#+BEGIN_SRC R :results graphics :file "compSurvival.png" :exports both :session *R* :cache yes 
library(survival)
data(pbc)
prodlim.0 <- prodlim(Hist(time,status!=0)~1,data=pbc)
survfit.0 <- survfit(Surv(time,status!=0)~1,data=pbc)
plot(survfit.0)
plot(prodlim.0,add=TRUE,col=2,lwd=3)
#+END_SRC   

#+BEGIN_SRC R :exports both :results output   :session *R* :cache no 
## There is arounding issue:
library(survival)
testdata <- data.frame(time=c(16.107812,3.657545,1.523978),event=c(0,1,1))
sum0 <- summary(survfit(Surv(time,event)~1,data=testdata),times=sort(testdata$time))
testdata$timeR <- round(testdata$time,1)
sum1 <- summary(survfit(Surv(timeR,event)~1,data=testdata),times=sort(testdata$time))
sum0
sum1
#+END_SRC   


** Bootstrap weights

#+BEGIN_SRC R :results graphics :file "bw.png" :exports both :session *R* :cache yes 
pbc <- pbc[order(pbc$time,-pbc$status),]
set.seed(17)
boot <- sample(1:NROW(pbc),size=NROW(pbc),replace=TRUE)
boot.weights <- table(factor(boot,levels=1:NROW(pbc)))
S1 <- prodlim(Hist(time,status>0)~1,data=pbc,caseweights=boot.weights)
plot(S1,col=1,confint=FALSE,lwd=8)
S2 <- prodlim(Hist(time,status>0)~1,data=pbc[sort(boot),])
plot(S2,add=TRUE,col=2,confint=FALSE,lwd=3)
#+END_SRC   

** Case-weights 

#+BEGIN_SRC R :results graphics :file "compSurvey.png" :exports both :session *R* :cache yes 
library(survey)
library(survival)
library(prodlim)
pbc <- pbc[order(pbc$time,-pbc$status),]
## pbc$randprob<-fitted(biasmodel)
## pbc$randprob <- as.numeric(pbc$sex=="m")+0.1
set.seed(17)
pbc$randprob <- abs(rnorm(NROW(pbc)))
dpbc <- svydesign(id=~id, weights=~randprob, strata=NULL, data=pbc)
survey.1<-svykm(Surv(time,status>0)~1, design=dpbc)
plot(survey.1,lwd=8)
prodlim.1 <- prodlim(Hist(time,status>0)~1,data=pbc,caseweights=pbc$randprob)
plot(prodlim.1,add=TRUE,col=2,confint=FALSE)
#+END_SRC   

** delayed entry 
*** Without covariates

#+BEGIN_SRC R :results graphics :file "d0.png" :exports results :session *R* :cache yes 
pbc$entry <- round(pbc$time/5)
survfit.delay <- survfit(Surv(entry,time,status!=0)~1,data=pbc)
prodlim.delay <- prodlim(Hist(time,status!=0,entry=entry)~1,data=pbc)
plot(survfit.delay,lwd=8)
plot(prodlim.delay,lwd=4,col=2,add=TRUE,confint=FALSE)
#+END_SRC

    
*** With covariates

#+BEGIN_SRC R :results graphics :file "compSurvDelayEdema.png" :exports both :session *R* :cache yes 
  pbc0 <- pbc
  pbc0$entry <- round(pbc0$time/5)
  survfit.delay.edema <- survfit(Surv(entry,time,status!=0)~edema,data=pbc0)
  ## survfit.delay.edema.0.5 <- survfit(Surv(entry,time,status!=0)~1,data=pbc0[pbc0$edema==0.5,])
  prodlim.delay.edema <- prodlim(Hist(time,status!=0,entry=entry)~edema,data=pbc0)
  ## prodlim.delay.edema.0.5 <- prodlim(Hist(time,status!=0,entry=entry)~1,data=pbc0[pbc0$edema==0.5,])
  plot(survfit.delay.edema,conf.int=FALSE,col=1:3,lwd=8)
  plot(prodlim.delay.edema,add=TRUE,confint=FALSE,col=c("gray88","orange",5),lwd=4)
#+END_SRC    


** Stacked plot
  
#+BEGIN_SRC R :results graphics  :file "aj.png" :exports both :session *R* :cache no 
library(riskRegression)
data(Melanoma)
aj <- prodlim(Hist(time,Event)~1,data=d)
plot(aj,cause="stacked")
#+END_SRC

** Competing risks with delayed entry 
*** Without covariates

#+BEGIN_SRC R :results graphics :file "compETM3.png" :exports both :session *R* :cache yes 
library(etm)
data(abortion)
cif.ab.etm <- etmCIF(Surv(entry, exit, cause != 0) ~ 1,abortion,etype = cause,failcode = 3)
cif.ab.prodlim <- prodlim(Hist(time=exit, event=cause,entry=entry) ~ 1,data=abortion)
plot(cif.ab.etm,lwd=8,col=3)
plot(cif.ab.prodlim,add=TRUE,lwd=4,col=5,cause=3)
#+END_SRC   

#+BEGIN_SRC R :results graphics  :file "compETM22.png" :exports both :session *R* :cache no 
library(etm)
data(abortion)
x <- prodlim(Hist(time=exit, event=cause,entry=entry) ~ 1,data=abortion)
x0 <- etmCIF(Surv(entry, exit, cause != 0) ~ 1,abortion,etype = cause)
par(mfrow=c(2,2))
cif.ab.etm <- etmCIF(Surv(entry, exit, cause != 0) ~ 1,abortion,etype = cause,failcode = 3)
cif.ab.prodlim <- prodlim(Hist(time=exit, event=cause,entry=entry) ~ 1,data=abortion)
# cause 3
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1,which.cif=3,lwd=8)
plot(cif.ab.prodlim,add=TRUE,cause=3,confint=TRUE,col=2)
# cause 2
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1,which.cif=2,lwd=8)
plot(cif.ab.prodlim,add=TRUE,cause=2,confint=TRUE,col=2)
# cause 1
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1,which.cif=1,lwd=8)
plot(cif.ab.prodlim,add=TRUE,cause=1,confint=TRUE,col=2)
#+END_SRC

    
*** With covariates

#+BEGIN_SRC R :results graphics :file "compETMcovariate.png" :exports results :session *R* :cache yes 
par(mfrow=c(1,1))
library(etm)
data(abortion)
cif.ab.etm <- etmCIF(Surv(entry, exit, cause != 0) ~ group,abortion,etype = cause,failcode = 3)
names(cif.ab.etm[[1]])
head(cbind(cif.ab.etm[[1]]$time,cif.ab.etm[[1]]$n.risk))
cif.ab.prodlim <- prodlim(Hist(time=exit, event=cause,entry=entry) ~ group,data=abortion)
plot(cif.ab.etm, ci.type = "bars", pos.ci = 24, col = c(1, 2), lty = 1, curvlab = c("Control", "Exposed"),lwd=8)
plot(cif.ab.prodlim,add=TRUE,cause=3,confint=FALSE,col="yellow")
#+END_SRC

#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache no :eval never
library(survival)
library(prodlim)
library(etm)
testdata <- data.frame(entry=c(1,5,2,8,5),exit=c(10,6,4,12,33),event=c(0,1,0,1,0))
cif.test.etm <- etmCIF(Surv(entry, exit, event) ~ 1,data=testdata,etype = event,failcode = 1)
cif.test.survival <- survfit(Surv(entry, exit, event) ~ 1,data=testdata)
cif.test.prodlim <- prodlim(Hist(exit,event,entry=entry)~1,data=testdata)
plot(cif.test.etm, ci.type = "bars", pos.ci = 24, lwd=5)
plot(cif.test.etm, ci.type = "bars", pos.ci = 24, lwd=5)
plot(cif.test.prodlim,add=TRUE,cause=2,col=2,confint=TRUE,type="cuminc")
#+END_SRC


* COMMENT HEADER

#+TITLE: Testing the prodlim package
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:t todo:t pri:nil tags:not-in-toc author:nil
#+LaTeX_CLASS: org-article
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://192.38.117.59/~tag/styles/practicals.css" />
#+LaTeX_HEADER:\usepackage{authblk}
#+LaTeX_HEADER:\author{Thomas Alexander Gerds}
#+PROPERTY: session *R*
#+PROPERTY: cache no
#+PROPERTY: tangle yes
